// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AppCompatibility.proto

#ifndef PROTOBUF_AppCompatibility_2eproto__INCLUDED
#define PROTOBUF_AppCompatibility_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Medusa {
namespace CoreProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_AppCompatibility_2eproto();
void protobuf_AssignDesc_AppCompatibility_2eproto();
void protobuf_ShutdownFile_AppCompatibility_2eproto();

class AppCompatibility;

enum AppCompatibility_InitializeOperation {
  AppCompatibility_InitializeOperation_None = 0,
  AppCompatibility_InitializeOperation_RemoveAllCache = 1
};
bool AppCompatibility_InitializeOperation_IsValid(int value);
const AppCompatibility_InitializeOperation AppCompatibility_InitializeOperation_InitializeOperation_MIN = AppCompatibility_InitializeOperation_None;
const AppCompatibility_InitializeOperation AppCompatibility_InitializeOperation_InitializeOperation_MAX = AppCompatibility_InitializeOperation_RemoveAllCache;
const int AppCompatibility_InitializeOperation_InitializeOperation_ARRAYSIZE = AppCompatibility_InitializeOperation_InitializeOperation_MAX + 1;

const ::google::protobuf::EnumDescriptor* AppCompatibility_InitializeOperation_descriptor();
inline const ::std::string& AppCompatibility_InitializeOperation_Name(AppCompatibility_InitializeOperation value) {
  return ::google::protobuf::internal::NameOfEnum(
    AppCompatibility_InitializeOperation_descriptor(), value);
}
inline bool AppCompatibility_InitializeOperation_Parse(
    const ::std::string& name, AppCompatibility_InitializeOperation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AppCompatibility_InitializeOperation>(
    AppCompatibility_InitializeOperation_descriptor(), name, value);
}
// ===================================================================

class AppCompatibility : public ::google::protobuf::Message {
 public:
  AppCompatibility();
  virtual ~AppCompatibility();

  AppCompatibility(const AppCompatibility& from);

  inline AppCompatibility& operator=(const AppCompatibility& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AppCompatibility& default_instance();

  void Swap(AppCompatibility* other);

  // implements Message ----------------------------------------------

  AppCompatibility* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppCompatibility& from);
  void MergeFrom(const AppCompatibility& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AppCompatibility_InitializeOperation InitializeOperation;
  static const InitializeOperation None = AppCompatibility_InitializeOperation_None;
  static const InitializeOperation RemoveAllCache = AppCompatibility_InitializeOperation_RemoveAllCache;
  static inline bool InitializeOperation_IsValid(int value) {
    return AppCompatibility_InitializeOperation_IsValid(value);
  }
  static const InitializeOperation InitializeOperation_MIN =
    AppCompatibility_InitializeOperation_InitializeOperation_MIN;
  static const InitializeOperation InitializeOperation_MAX =
    AppCompatibility_InitializeOperation_InitializeOperation_MAX;
  static const int InitializeOperation_ARRAYSIZE =
    AppCompatibility_InitializeOperation_InitializeOperation_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  InitializeOperation_descriptor() {
    return AppCompatibility_InitializeOperation_descriptor();
  }
  static inline const ::std::string& InitializeOperation_Name(InitializeOperation value) {
    return AppCompatibility_InitializeOperation_Name(value);
  }
  static inline bool InitializeOperation_Parse(const ::std::string& name,
      InitializeOperation* value) {
    return AppCompatibility_InitializeOperation_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 version = 2;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 2;
  inline ::google::protobuf::uint32 version() const;
  inline void set_version(::google::protobuf::uint32 value);

  // required .Medusa.CoreProto.AppCompatibility.InitializeOperation operation = 1;
  inline bool has_operation() const;
  inline void clear_operation();
  static const int kOperationFieldNumber = 1;
  inline ::Medusa::CoreProto::AppCompatibility_InitializeOperation operation() const;
  inline void set_operation(::Medusa::CoreProto::AppCompatibility_InitializeOperation value);

  // @@protoc_insertion_point(class_scope:Medusa.CoreProto.AppCompatibility)
 private:
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_operation();
  inline void clear_has_operation();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 version_;
  int operation_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_AppCompatibility_2eproto();
  friend void protobuf_AssignDesc_AppCompatibility_2eproto();
  friend void protobuf_ShutdownFile_AppCompatibility_2eproto();

  void InitAsDefaultInstance();
  static AppCompatibility* default_instance_;
};
// ===================================================================


// ===================================================================

// AppCompatibility

// required uint32 version = 2;
inline bool AppCompatibility::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AppCompatibility::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AppCompatibility::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AppCompatibility::clear_version() {
  version_ = 0u;
  clear_has_version();
}
inline ::google::protobuf::uint32 AppCompatibility::version() const {
  return version_;
}
inline void AppCompatibility::set_version(::google::protobuf::uint32 value) {
  set_has_version();
  version_ = value;
}

// required .Medusa.CoreProto.AppCompatibility.InitializeOperation operation = 1;
inline bool AppCompatibility::has_operation() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AppCompatibility::set_has_operation() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AppCompatibility::clear_has_operation() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AppCompatibility::clear_operation() {
  operation_ = 0;
  clear_has_operation();
}
inline ::Medusa::CoreProto::AppCompatibility_InitializeOperation AppCompatibility::operation() const {
  return static_cast< ::Medusa::CoreProto::AppCompatibility_InitializeOperation >(operation_);
}
inline void AppCompatibility::set_operation(::Medusa::CoreProto::AppCompatibility_InitializeOperation value) {
  assert(::Medusa::CoreProto::AppCompatibility_InitializeOperation_IsValid(value));
  set_has_operation();
  operation_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CoreProto
}  // namespace Medusa

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Medusa::CoreProto::AppCompatibility_InitializeOperation>() {
  return ::Medusa::CoreProto::AppCompatibility_InitializeOperation_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_AppCompatibility_2eproto__INCLUDED
