// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StringTable.proto

#ifndef PROTOBUF_StringTable_2eproto__INCLUDED
#define PROTOBUF_StringTable_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Medusa {
namespace CoreProto {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_StringTable_2eproto();
void protobuf_AssignDesc_StringTable_2eproto();
void protobuf_ShutdownFile_StringTable_2eproto();

class StringOrderItem;
class StringNameItem;
class StringTable;

// ===================================================================

class StringOrderItem : public ::google::protobuf::Message {
 public:
  StringOrderItem();
  virtual ~StringOrderItem();

  StringOrderItem(const StringOrderItem& from);

  inline StringOrderItem& operator=(const StringOrderItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringOrderItem& default_instance();

  void Swap(StringOrderItem* other);

  // implements Message ----------------------------------------------

  StringOrderItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringOrderItem& from);
  void MergeFrom(const StringOrderItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 order = 1;
  inline bool has_order() const;
  inline void clear_order();
  static const int kOrderFieldNumber = 1;
  inline ::google::protobuf::uint32 order() const;
  inline void set_order(::google::protobuf::uint32 value);

  // required string value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::std::string& value() const;
  inline void set_value(const ::std::string& value);
  inline void set_value(const char* value);
  inline void set_value(const char* value, size_t size);
  inline ::std::string* mutable_value();
  inline ::std::string* release_value();
  inline void set_allocated_value(::std::string* value);

  // @@protoc_insertion_point(class_scope:Medusa.CoreProto.StringOrderItem)
 private:
  inline void set_has_order();
  inline void clear_has_order();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* value_;
  ::google::protobuf::uint32 order_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_StringTable_2eproto();
  friend void protobuf_AssignDesc_StringTable_2eproto();
  friend void protobuf_ShutdownFile_StringTable_2eproto();

  void InitAsDefaultInstance();
  static StringOrderItem* default_instance_;
};
// -------------------------------------------------------------------

class StringNameItem : public ::google::protobuf::Message {
 public:
  StringNameItem();
  virtual ~StringNameItem();

  StringNameItem(const StringNameItem& from);

  inline StringNameItem& operator=(const StringNameItem& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringNameItem& default_instance();

  void Swap(StringNameItem* other);

  // implements Message ----------------------------------------------

  StringNameItem* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringNameItem& from);
  void MergeFrom(const StringNameItem& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated .Medusa.CoreProto.StringOrderItem orderItems = 2;
  inline int orderitems_size() const;
  inline void clear_orderitems();
  static const int kOrderItemsFieldNumber = 2;
  inline const ::Medusa::CoreProto::StringOrderItem& orderitems(int index) const;
  inline ::Medusa::CoreProto::StringOrderItem* mutable_orderitems(int index);
  inline ::Medusa::CoreProto::StringOrderItem* add_orderitems();
  inline const ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringOrderItem >&
      orderitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringOrderItem >*
      mutable_orderitems();

  // @@protoc_insertion_point(class_scope:Medusa.CoreProto.StringNameItem)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringOrderItem > orderitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_StringTable_2eproto();
  friend void protobuf_AssignDesc_StringTable_2eproto();
  friend void protobuf_ShutdownFile_StringTable_2eproto();

  void InitAsDefaultInstance();
  static StringNameItem* default_instance_;
};
// -------------------------------------------------------------------

class StringTable : public ::google::protobuf::Message {
 public:
  StringTable();
  virtual ~StringTable();

  StringTable(const StringTable& from);

  inline StringTable& operator=(const StringTable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const StringTable& default_instance();

  void Swap(StringTable* other);

  // implements Message ----------------------------------------------

  StringTable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const StringTable& from);
  void MergeFrom(const StringTable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .Medusa.CoreProto.StringNameItem nameItems = 1;
  inline int nameitems_size() const;
  inline void clear_nameitems();
  static const int kNameItemsFieldNumber = 1;
  inline const ::Medusa::CoreProto::StringNameItem& nameitems(int index) const;
  inline ::Medusa::CoreProto::StringNameItem* mutable_nameitems(int index);
  inline ::Medusa::CoreProto::StringNameItem* add_nameitems();
  inline const ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringNameItem >&
      nameitems() const;
  inline ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringNameItem >*
      mutable_nameitems();

  // @@protoc_insertion_point(class_scope:Medusa.CoreProto.StringTable)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringNameItem > nameitems_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_StringTable_2eproto();
  friend void protobuf_AssignDesc_StringTable_2eproto();
  friend void protobuf_ShutdownFile_StringTable_2eproto();

  void InitAsDefaultInstance();
  static StringTable* default_instance_;
};
// ===================================================================


// ===================================================================

// StringOrderItem

// required uint32 order = 1;
inline bool StringOrderItem::has_order() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringOrderItem::set_has_order() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringOrderItem::clear_has_order() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringOrderItem::clear_order() {
  order_ = 0u;
  clear_has_order();
}
inline ::google::protobuf::uint32 StringOrderItem::order() const {
  return order_;
}
inline void StringOrderItem::set_order(::google::protobuf::uint32 value) {
  set_has_order();
  order_ = value;
}

// required string value = 2;
inline bool StringOrderItem::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void StringOrderItem::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void StringOrderItem::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void StringOrderItem::clear_value() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    value_->clear();
  }
  clear_has_value();
}
inline const ::std::string& StringOrderItem::value() const {
  return *value_;
}
inline void StringOrderItem::set_value(const ::std::string& value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void StringOrderItem::set_value(const char* value) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(value);
}
inline void StringOrderItem::set_value(const char* value, size_t size) {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  value_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringOrderItem::mutable_value() {
  set_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    value_ = new ::std::string;
  }
  return value_;
}
inline ::std::string* StringOrderItem::release_value() {
  clear_has_value();
  if (value_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = value_;
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StringOrderItem::set_allocated_value(::std::string* value) {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (value) {
    set_has_value();
    value_ = value;
  } else {
    clear_has_value();
    value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// StringNameItem

// required string name = 1;
inline bool StringNameItem::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void StringNameItem::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void StringNameItem::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void StringNameItem::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& StringNameItem::name() const {
  return *name_;
}
inline void StringNameItem::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void StringNameItem::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void StringNameItem::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* StringNameItem::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* StringNameItem::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void StringNameItem::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated .Medusa.CoreProto.StringOrderItem orderItems = 2;
inline int StringNameItem::orderitems_size() const {
  return orderitems_.size();
}
inline void StringNameItem::clear_orderitems() {
  orderitems_.Clear();
}
inline const ::Medusa::CoreProto::StringOrderItem& StringNameItem::orderitems(int index) const {
  return orderitems_.Get(index);
}
inline ::Medusa::CoreProto::StringOrderItem* StringNameItem::mutable_orderitems(int index) {
  return orderitems_.Mutable(index);
}
inline ::Medusa::CoreProto::StringOrderItem* StringNameItem::add_orderitems() {
  return orderitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringOrderItem >&
StringNameItem::orderitems() const {
  return orderitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringOrderItem >*
StringNameItem::mutable_orderitems() {
  return &orderitems_;
}

// -------------------------------------------------------------------

// StringTable

// repeated .Medusa.CoreProto.StringNameItem nameItems = 1;
inline int StringTable::nameitems_size() const {
  return nameitems_.size();
}
inline void StringTable::clear_nameitems() {
  nameitems_.Clear();
}
inline const ::Medusa::CoreProto::StringNameItem& StringTable::nameitems(int index) const {
  return nameitems_.Get(index);
}
inline ::Medusa::CoreProto::StringNameItem* StringTable::mutable_nameitems(int index) {
  return nameitems_.Mutable(index);
}
inline ::Medusa::CoreProto::StringNameItem* StringTable::add_nameitems() {
  return nameitems_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringNameItem >&
StringTable::nameitems() const {
  return nameitems_;
}
inline ::google::protobuf::RepeatedPtrField< ::Medusa::CoreProto::StringNameItem >*
StringTable::mutable_nameitems() {
  return &nameitems_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace CoreProto
}  // namespace Medusa

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_StringTable_2eproto__INCLUDED
