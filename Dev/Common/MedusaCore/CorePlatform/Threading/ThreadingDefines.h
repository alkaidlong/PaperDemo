#pragma once

#include "CorePlatform/CorePlatformDefines.h"
#include "CorePlatform/Common/CommonMarcos.h"


//Just for test
#define MEDUSA_THREADING_MULTIPLE
#define MEDUSA_THREADING_PTHREAD_ALWAYS
//Just for test

#undef MEDUSA_THREADING_MODEL


#define MEDUSA_THREADING_MODEL_SINGLE 1
#define MEDUSA_THREADING_MODEL_MULTIPLE 2


#ifdef MEDUSA_THREADING_SINGLE
#define MEDUSA_THREADING_MODEL MEDUSA_THREADING_MODEL_SINGLE
#endif

#ifdef MEDUSA_THREADING_MULTIPLE
#define MEDUSA_THREADING_MODEL MEDUSA_THREADING_MODEL_MULTIPLE
#endif

#ifndef MEDUSA_THREADING_MODEL
#error  "Can not recognize the threading model (MEDUSA_THREADING_SINGLE,MEDUSA_THREADING_MULTIPLE), compling under a unknown threading model?"
#endif 



#undef MEDUSA_THREADING_LIB

#define MEDUSA_THREADING_LIB_PLATFORM_ADAPTION 1
#define MEDUSA_THREADING_LIB_PTHREAD_ALWAYS 2


#ifdef MEDUSA_THREADING_PLATFORM_ADAPTION
#define MEDUSA_THREADING_LIB MEDUSA_THREADING_LIB_PLATFORM_ADAPTION
#endif

#ifdef MEDUSA_THREADING_PTHREAD_ALWAYS
#define MEDUSA_THREADING_LIB MEDUSA_THREADING_LIB_PTHREAD_ALWAYS
#endif

#ifndef MEDUSA_THREADING_LIB
#error  "Can not recognize the threading lib (MEDUSA_THREADING_PLATFORM_ADAPTION,MEDUSA_THREADING_PTHREAD_ALWAYS), compling with a unknown threading lib?"
#endif 

//type defines

#if MEDUSA_THREADING_MODEL==MEDUSA_THREADING_MODEL_MULTIPLE

#ifdef MEDUSA_WINDOWS
#if MEDUSA_THREADING_LIB==MEDUSA_THREADING_LIB_PLATFORM_ADAPTION
#define MEDUSA_PRIVATE_THREADING_MUTEXT_TYPE(x) CRITICAL_SECTION x
#define MEDUSA_PRIVATE_THREADING_MUTEXT_INIT(x) ::InitializeCriticalSection(x)
#define MEDUSA_PRIVATE_THREADING_MUTEXT_DELETE(x) ::DeleteCriticalSection(x)
#define MEDUSA_PRIVATE_THREADING_MUTEXT_ENTER(x) ::EnterCriticalSection(x)
#define MEDUSA_PRIVATE_THREADING_MUTEXT_LEAVE(x) ::LeaveCriticalSection(x)
#endif	//MEDUSA_THREADING_LIB==MEDUSA_THREADING_LIB_PLATFORM_ADAPTION end
#else
#define MEDUSA_PRIVATE_THREADING_MUTEXT_TYPE(x) pthread_mutex_t x
#define MEDUSA_PRIVATE_THREADING_MUTEXT_INIT(x) ::pthread_mutex_init(x,0)
#define MEDUSA_PRIVATE_THREADING_MUTEXT_DELETE(x) ::pthread_mutex_destroy(x)
#define MEDUSA_PRIVATE_THREADING_MUTEXT_ENTER(x) ::pthread_mutex_lock(x)
#define MEDUSA_PRIVATE_THREADING_MUTEXT_LEAVE(x) ::pthread_mutex_unlock(x)
#endif	//MEDUSA_THREADING_LIB==MEDUSA_THREADING_LIB_PTHREAD_ALWAYS end
#else
#define MEDUSA_PRIVATE_THREADING_MUTEXT_TYPE(x) 
#define MEDUSA_PRIVATE_THREADING_MUTEXT_INIT(x) 
#define MEDUSA_PRIVATE_THREADING_MUTEXT_DELETE(x) 
#define MEDUSA_PRIVATE_THREADING_MUTEXT_ENTER(x) 
#define MEDUSA_PRIVATE_THREADING_MUTEXT_LEAVE(x) 
#endif	//MEDUSA_THREADING_LIB==MEDUSA_THREADING_MODEL_SINGLE end

